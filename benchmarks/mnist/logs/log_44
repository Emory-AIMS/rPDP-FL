Project Path:  /data/privacyGroup/liujunxu/Fed-rPDP
noise_multiplier :  12.373046875
Round=0, perf=[1502, 1523, 1519, 1491, 1531, 1493, 1490, 1503, 1521, 1508], mean perf=15081/20400 (0.7393%)
Round=1, perf=[1881, 1876, 1884, 1868, 1866, 1839, 1872, 1871, 1859, 1892], mean perf=18708/20400 (0.9171%)
Round=2, perf=[1937, 1926, 1937, 1919, 1930, 1925, 1928, 1936, 1923, 1938], mean perf=19299/20400 (0.9460%)
Round=3, perf=[1956, 1943, 1950, 1945, 1956, 1936, 1943, 1956, 1935, 1953], mean perf=19473/20400 (0.9546%)
Round=4, perf=[1977, 1960, 1966, 1959, 1966, 1966, 1966, 1967, 1953, 1982], mean perf=19662/20400 (0.9638%)
Round=5, perf=[1977, 1973, 1972, 1965, 1976, 1972, 1976, 1971, 1947, 1982], mean perf=19711/20400 (0.9662%)
Round=6, perf=[1990, 1978, 1979, 1973, 1983, 1981, 1975, 1973, 1966, 1987], mean perf=19785/20400 (0.9699%)
Round=7, perf=[1994, 1980, 1986, 1978, 1995, 1985, 1989, 1978, 1971, 1991], mean perf=19847/20400 (0.9729%)
Round=8, perf=[1996, 1984, 1991, 1983, 1994, 1989, 1994, 1983, 1978, 2000], mean perf=19892/20400 (0.9751%)
Round=9, perf=[1997, 1984, 1991, 1987, 1998, 1988, 2000, 1985, 1983, 2000], mean perf=19913/20400 (0.9761%)
Round=10, perf=[2000, 1988, 1991, 1987, 2004, 1993, 1995, 1989, 1979, 2004], mean perf=19930/20400 (0.9770%)
Round=11, perf=[1998, 1986, 1996, 1989, 2001, 1996, 2002, 1989, 1983, 2008], mean perf=19948/20400 (0.9778%)
Round=12, perf=[2006, 1989, 1998, 1991, 2008, 1997, 2000, 1988, 1984, 2012], mean perf=19973/20400 (0.9791%)
Round=13, perf=[2005, 1991, 2003, 1993, 2009, 2001, 2003, 1992, 1989, 2011], mean perf=19997/20400 (0.9802%)
Round=14, perf=[2010, 1996, 2003, 1996, 2014, 2002, 2005, 1992, 1994, 2012], mean perf=20024/20400 (0.9816%)
Mean performance without rPDP, Mean Perf=0.9803
../../fedrpdp/accountants/analysis/rdp.py:358: UserWarning: Optimal order is the largest alpha. Please consider expanding the range of alphas to get a tighter privacy bound.
  f"Optimal order is the {extreme} alpha. Please consider expanding the range of alphas to get a tighter privacy bound."
r2 score of the curve fitting. 0.9998451794812138
sample_rate: 0.021965964339383415 / 0.021965964339383415, expected_batch_size: 86 / 3960
Round=0, perf=[193, 182, 183, 190, 184, 202, 199, 206, 167, 188], mean perf=1894/20400 (0.0928%)
Round=1, perf=[224, 212, 207, 213, 234, 214, 216, 202, 213, 214], mean perf=2149/20400 (0.1053%)
Round=2, perf=[313, 306, 336, 296, 327, 320, 314, 323, 274, 323], mean perf=3132/20400 (0.1535%)
Round=3, perf=[322, 313, 355, 299, 289, 327, 307, 314, 317, 316], mean perf=3159/20400 (0.1549%)
Round=4, perf=[425, 435, 451, 433, 455, 437, 411, 434, 409, 417], mean perf=4307/20400 (0.2111%)
Round=5, perf=[580, 625, 587, 570, 595, 613, 588, 609, 585, 576], mean perf=5928/20400 (0.2906%)
Round=6, perf=[727, 730, 705, 663, 703, 687, 718, 715, 710, 718], mean perf=7076/20400 (0.3469%)
Round=7, perf=[772, 783, 734, 744, 769, 739, 775, 755, 772, 770], mean perf=7613/20400 (0.3732%)
Round=8, perf=[774, 789, 773, 746, 770, 718, 749, 753, 751, 767], mean perf=7590/20400 (0.3721%)
Round=9, perf=[970, 958, 964, 928, 979, 977, 936, 937, 948, 987], mean perf=9584/20400 (0.4698%)
Round=10, perf=[850, 809, 809, 823, 838, 818, 827, 810, 819, 842], mean perf=8245/20400 (0.4042%)
Round=11, perf=[969, 992, 943, 912, 960, 932, 949, 967, 914, 969], mean perf=9507/20400 (0.4660%)
Round=12, perf=[909, 940, 913, 873, 912, 894, 923, 915, 923, 946], mean perf=9148/20400 (0.4484%)
Round=13, perf=[1041, 1060, 1093, 1031, 1068, 1028, 1090, 1082, 1053, 1093], mean perf=10639/20400 (0.5215%)
Round=14, perf=[1020, 1038, 1035, 994, 1050, 1011, 1031, 1021, 1020, 1045], mean perf=10265/20400 (0.5032%)
Mean performance of StrongForAll, eps=[[0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 ...
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]], delta=0.0001, Perf=0.4910
 We run FedAvg with rPDP (ThreeLevels-0) ...
sample_rate: 0.021965964339383415 / 0.5678197400135198, expected_batch_size: 392 / 3960
Round=0, perf=[236, 248, 229, 236, 247, 223, 232, 265, 233, 239], mean perf=2388/20400 (0.1171%)
Round=1, perf=[485, 511, 497, 481, 486, 464, 488, 516, 491, 489], mean perf=4908/20400 (0.2406%)
Round=2, perf=[1040, 1066, 1039, 1033, 1052, 979, 1019, 1062, 1053, 1050], mean perf=10393/20400 (0.5095%)
Round=3, perf=[1269, 1293, 1271, 1229, 1293, 1232, 1275, 1262, 1278, 1276], mean perf=12678/20400 (0.6215%)
Round=4, perf=[1380, 1381, 1389, 1344, 1413, 1352, 1356, 1362, 1372, 1382], mean perf=13731/20400 (0.6731%)
Round=5, perf=[1435, 1448, 1448, 1430, 1477, 1407, 1434, 1426, 1434, 1449], mean perf=14388/20400 (0.7053%)
Round=6, perf=[1538, 1549, 1547, 1538, 1579, 1521, 1534, 1567, 1557, 1551], mean perf=15481/20400 (0.7589%)
Round=7, perf=[1584, 1607, 1605, 1593, 1636, 1594, 1585, 1597, 1610, 1590], mean perf=16001/20400 (0.7844%)
Round=8, perf=[1648, 1676, 1659, 1655, 1691, 1640, 1654, 1659, 1654, 1664], mean perf=16600/20400 (0.8137%)
Round=9, perf=[1683, 1709, 1696, 1683, 1715, 1669, 1697, 1681, 1680, 1693], mean perf=16906/20400 (0.8287%)
Round=10, perf=[1708, 1737, 1724, 1722, 1732, 1694, 1711, 1707, 1705, 1728], mean perf=17168/20400 (0.8416%)
Round=11, perf=[1724, 1746, 1737, 1737, 1742, 1719, 1727, 1727, 1720, 1744], mean perf=17323/20400 (0.8492%)
Round=12, perf=[1750, 1763, 1757, 1756, 1758, 1737, 1744, 1743, 1735, 1754], mean perf=17497/20400 (0.8577%)
Round=13, perf=[1766, 1786, 1788, 1782, 1771, 1763, 1757, 1763, 1762, 1782], mean perf=17720/20400 (0.8686%)
Round=14, perf=[1783, 1794, 1795, 1786, 1783, 1767, 1761, 1764, 1771, 1793], mean perf=17797/20400 (0.8724%)
Mean performance of ThreeLevels, min_eps=0.1000, max_eps=5.0000, delta=0.0001, Perf=0.8662, seed=44
 We run FedAvg with rPDP (Dropout) ...
sample_rate: 0.0 / 0.1068888531010202, expected_batch_size: 126 / 3960
Round=0, perf=[315, 344, 304, 318, 313, 312, 305, 342, 317, 311], mean perf=3181/20400 (0.1559%)
Round=1, perf=[242, 254, 241, 247, 244, 220, 241, 268, 241, 238], mean perf=2436/20400 (0.1194%)
Round=2, perf=[385, 404, 417, 386, 400, 364, 400, 423, 414, 414], mean perf=4007/20400 (0.1964%)
Round=3, perf=[540, 577, 578, 532, 545, 533, 553, 591, 543, 556], mean perf=5548/20400 (0.2720%)
Round=4, perf=[763, 767, 814, 754, 810, 720, 764, 800, 777, 765], mean perf=7734/20400 (0.3791%)
Round=5, perf=[862, 868, 869, 863, 893, 809, 861, 873, 877, 880], mean perf=8655/20400 (0.4243%)
Round=6, perf=[1114, 1135, 1102, 1116, 1142, 1080, 1119, 1110, 1123, 1120], mean perf=11161/20400 (0.5471%)
Round=7, perf=[1208, 1252, 1239, 1222, 1239, 1213, 1221, 1207, 1255, 1227], mean perf=12283/20400 (0.6021%)
Round=8, perf=[1259, 1275, 1255, 1241, 1253, 1220, 1245, 1246, 1266, 1241], mean perf=12501/20400 (0.6128%)
Round=9, perf=[1331, 1358, 1336, 1310, 1351, 1308, 1323, 1344, 1346, 1338], mean perf=13345/20400 (0.6542%)
Round=10, perf=[1426, 1412, 1407, 1398, 1451, 1374, 1409, 1421, 1403, 1417], mean perf=14118/20400 (0.6921%)
Round=11, perf=[1478, 1470, 1465, 1471, 1484, 1432, 1458, 1479, 1458, 1480], mean perf=14675/20400 (0.7194%)
Round=12, perf=[1523, 1542, 1534, 1531, 1555, 1505, 1516, 1524, 1534, 1546], mean perf=15310/20400 (0.7505%)
Round=13, perf=[1576, 1607, 1573, 1554, 1592, 1588, 1552, 1564, 1577, 1592], mean perf=15775/20400 (0.7733%)
Round=14, perf=[1561, 1579, 1562, 1549, 1591, 1536, 1552, 1553, 1551, 1563], mean perf=15597/20400 (0.7646%)
Mean performance of Dropout, eps=1.0, delta=0.0001, Perf=0.7628
sample_rate: 0.021966588549308025 / 0.021966588549308025, expected_batch_size: 86 / 3960
Round=0, perf=[174, 184, 169, 188, 182, 178, 138, 169, 164, 141], mean perf=1687/20400 (0.0827%)
Round=1, perf=[229, 245, 227, 241, 250, 256, 238, 252, 234, 235], mean perf=2407/20400 (0.1180%)
Round=2, perf=[412, 451, 464, 416, 431, 393, 424, 427, 427, 430], mean perf=4275/20400 (0.2096%)
Round=3, perf=[548, 581, 595, 522, 550, 535, 539, 562, 534, 543], mean perf=5509/20400 (0.2700%)
Round=4, perf=[474, 489, 524, 458, 484, 468, 470, 477, 474, 474], mean perf=4792/20400 (0.2349%)
Round=5, perf=[668, 666, 685, 650, 676, 642, 657, 694, 658, 683], mean perf=6679/20400 (0.3274%)
Round=6, perf=[470, 450, 445, 449, 466, 419, 445, 490, 426, 435], mean perf=4495/20400 (0.2203%)
Round=7, perf=[781, 785, 803, 738, 787, 784, 782, 803, 766, 792], mean perf=7821/20400 (0.3834%)
Round=8, perf=[812, 807, 808, 811, 804, 776, 792, 823, 839, 808], mean perf=8080/20400 (0.3961%)
Round=9, perf=[921, 919, 920, 944, 945, 906, 891, 948, 938, 942], mean perf=9274/20400 (0.4546%)
Round=10, perf=[880, 861, 875, 859, 926, 850, 874, 882, 865, 892], mean perf=8764/20400 (0.4296%)
Round=11, perf=[902, 915, 904, 884, 948, 859, 914, 924, 882, 892], mean perf=9024/20400 (0.4424%)
Round=12, perf=[1045, 1024, 1041, 1031, 1054, 998, 1025, 1043, 1014, 1029], mean perf=10304/20400 (0.5051%)
Round=13, perf=[1151, 1143, 1146, 1127, 1163, 1067, 1112, 1147, 1107, 1151], mean perf=11314/20400 (0.5546%)
Round=14, perf=[1285, 1281, 1264, 1248, 1277, 1205, 1254, 1257, 1263, 1290], mean perf=12624/20400 (0.6188%)
Mean performance of StrongForAll, eps=[[0.10000481 0.10000481 0.10000481 ... 0.10000481 0.10000481 0.10000481]
 [0.10000481 0.10000481 0.10000481 ... 0.10000481 0.10000481 0.10000481]
 [0.10000481 0.10000481 0.10000481 ... 0.10000481 0.10000481 0.10000481]
 ...
 [0.10000481 0.10000481 0.10000481 ... 0.10000481 0.10000481 0.10000481]
 [0.10000481 0.10000481 0.10000481 ... 0.10000481 0.10000481 0.10000481]
 [0.10000481 0.10000481 0.10000481 ... 0.10000481 0.10000481 0.10000481]], delta=0.0001, Perf=0.5595
 We run FedAvg with rPDP (BoundedPareto-0) ...
sample_rate: 0.021974923459577335 / 0.8991238233181997, expected_batch_size: 261 / 3960
Round=0, perf=[220, 231, 217, 232, 227, 203, 218, 243, 223, 221], mean perf=2235/20400 (0.1096%)
Round=1, perf=[485, 506, 487, 466, 483, 467, 471, 514, 469, 489], mean perf=4837/20400 (0.2371%)
Round=2, perf=[829, 828, 825, 806, 837, 813, 823, 836, 825, 816], mean perf=8238/20400 (0.4038%)
Round=3, perf=[978, 975, 973, 964, 984, 965, 984, 996, 991, 985], mean perf=9795/20400 (0.4801%)
Round=4, perf=[1182, 1203, 1170, 1150, 1193, 1154, 1170, 1153, 1180, 1169], mean perf=11724/20400 (0.5747%)
Round=5, perf=[1309, 1301, 1273, 1256, 1320, 1260, 1291, 1283, 1280, 1297], mean perf=12870/20400 (0.6309%)
Round=6, perf=[1461, 1483, 1459, 1434, 1472, 1428, 1445, 1439, 1444, 1456], mean perf=14521/20400 (0.7118%)
Round=7, perf=[1529, 1539, 1512, 1510, 1523, 1501, 1522, 1511, 1529, 1524], mean perf=15200/20400 (0.7451%)
Round=8, perf=[1582, 1587, 1577, 1578, 1592, 1571, 1584, 1565, 1587, 1578], mean perf=15801/20400 (0.7746%)
Round=9, perf=[1683, 1685, 1672, 1672, 1681, 1662, 1687, 1656, 1672, 1678], mean perf=16748/20400 (0.8210%)
Round=10, perf=[1733, 1730, 1719, 1712, 1723, 1700, 1722, 1694, 1702, 1724], mean perf=17159/20400 (0.8411%)
Round=11, perf=[1738, 1741, 1734, 1711, 1726, 1708, 1724, 1690, 1705, 1726], mean perf=17203/20400 (0.8433%)
Round=12, perf=[1747, 1738, 1748, 1728, 1748, 1715, 1751, 1716, 1735, 1742], mean perf=17368/20400 (0.8514%)
Round=13, perf=[1772, 1758, 1773, 1753, 1770, 1753, 1766, 1746, 1759, 1773], mean perf=17623/20400 (0.8639%)
Round=14, perf=[1792, 1777, 1789, 1771, 1788, 1761, 1784, 1761, 1777, 1789], mean perf=17789/20400 (0.8720%)
Mean performance of BoundedPareto, min_eps=0.1001, max_eps=8.7677, delta=0.0001, Perf=0.8624, seed=44
 We run FedAvg with rPDP (Dropout) ...
sample_rate: 0.0 / 0.06485152497145695, expected_batch_size: 84 / 3960
Round=0, perf=[367, 396, 379, 364, 373, 386, 384, 392, 384, 373], mean perf=3798/20400 (0.1862%)
Round=1, perf=[402, 431, 432, 362, 381, 411, 418, 409, 429, 408], mean perf=4083/20400 (0.2001%)
Round=2, perf=[347, 347, 339, 323, 332, 363, 343, 361, 329, 342], mean perf=3426/20400 (0.1679%)
Round=3, perf=[298, 302, 303, 275, 299, 286, 290, 295, 293, 302], mean perf=2943/20400 (0.1443%)
Round=4, perf=[263, 265, 264, 245, 268, 245, 264, 256, 255, 256], mean perf=2581/20400 (0.1265%)
Round=5, perf=[424, 422, 455, 394, 440, 448, 457, 455, 423, 447], mean perf=4365/20400 (0.2140%)
Round=6, perf=[497, 448, 470, 472, 500, 507, 524, 470, 501, 488], mean perf=4877/20400 (0.2391%)
Round=7, perf=[299, 305, 307, 285, 323, 301, 302, 303, 300, 301], mean perf=3026/20400 (0.1483%)
Round=8, perf=[418, 416, 429, 381, 416, 422, 419, 421, 431, 432], mean perf=4185/20400 (0.2051%)
Round=9, perf=[523, 551, 567, 525, 554, 530, 544, 561, 549, 560], mean perf=5464/20400 (0.2678%)
Round=10, perf=[490, 498, 486, 460, 499, 483, 485, 500, 509, 488], mean perf=4898/20400 (0.2401%)
Round=11, perf=[491, 513, 524, 494, 526, 533, 509, 519, 504, 507], mean perf=5120/20400 (0.2510%)
Round=12, perf=[654, 660, 675, 627, 694, 655, 650, 675, 675, 649], mean perf=6614/20400 (0.3242%)
Round=13, perf=[796, 778, 807, 745, 798, 808, 789, 807, 826, 804], mean perf=7958/20400 (0.3901%)
Round=14, perf=[768, 744, 747, 722, 775, 767, 734, 777, 784, 779], mean perf=7597/20400 (0.3724%)
Mean performance of Dropout, eps=1.0, delta=0.0001, Perf=0.3622
sample_rate: 0.021965964339383415 / 0.021965964339383415, expected_batch_size: 86 / 3960
Round=0, perf=[202, 223, 205, 215, 212, 201, 206, 228, 219, 208], mean perf=2119/20400 (0.1039%)
Round=1, perf=[415, 435, 420, 409, 420, 425, 405, 418, 409, 418], mean perf=4174/20400 (0.2046%)
Round=2, perf=[280, 275, 298, 260, 269, 296, 259, 287, 301, 293], mean perf=2818/20400 (0.1381%)
Round=3, perf=[328, 379, 382, 366, 355, 350, 334, 357, 367, 362], mean perf=3580/20400 (0.1755%)
Round=4, perf=[371, 372, 415, 368, 397, 392, 373, 401, 376, 387], mean perf=3852/20400 (0.1888%)
Round=5, perf=[491, 500, 493, 504, 507, 493, 472, 517, 487, 488], mean perf=4952/20400 (0.2427%)
Round=6, perf=[560, 586, 560, 573, 587, 567, 578, 599, 594, 579], mean perf=5783/20400 (0.2835%)
Round=7, perf=[454, 472, 475, 449, 480, 454, 457, 497, 456, 477], mean perf=4671/20400 (0.2290%)
Round=8, perf=[616, 613, 644, 595, 645, 617, 614, 669, 606, 638], mean perf=6257/20400 (0.3067%)
Round=9, perf=[673, 675, 707, 690, 711, 679, 697, 716, 709, 711], mean perf=6968/20400 (0.3416%)
Round=10, perf=[816, 802, 850, 781, 801, 842, 827, 863, 833, 859], mean perf=8274/20400 (0.4056%)
Round=11, perf=[912, 905, 906, 845, 895, 878, 900, 951, 897, 958], mean perf=9047/20400 (0.4435%)
Round=12, perf=[928, 932, 925, 877, 926, 911, 907, 939, 938, 963], mean perf=9246/20400 (0.4532%)
Round=13, perf=[1015, 1002, 1022, 968, 990, 973, 996, 1028, 1001, 1036], mean perf=10031/20400 (0.4917%)
Round=14, perf=[1022, 994, 994, 962, 979, 1007, 962, 1022, 973, 1042], mean perf=9957/20400 (0.4881%)
Mean performance of StrongForAll, eps=[[0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 ...
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]], delta=0.0001, Perf=0.4777
 We run FedAvg with rPDP (BoundedMixGauss-0) ...
sample_rate: 0.021965964339383415 / 0.7382737003325065, expected_batch_size: 401 / 3960
Round=0, perf=[221, 236, 221, 225, 232, 213, 226, 256, 231, 221], mean perf=2282/20400 (0.1119%)
Round=1, perf=[514, 544, 518, 487, 518, 495, 494, 542, 503, 512], mean perf=5127/20400 (0.2513%)
Round=2, perf=[1002, 1040, 1008, 967, 1022, 961, 971, 1032, 1027, 1020], mean perf=10050/20400 (0.4926%)
Round=3, perf=[1247, 1275, 1268, 1227, 1281, 1214, 1250, 1257, 1264, 1270], mean perf=12553/20400 (0.6153%)
Round=4, perf=[1337, 1360, 1346, 1306, 1353, 1293, 1323, 1338, 1359, 1344], mean perf=13359/20400 (0.6549%)
Round=5, perf=[1467, 1484, 1478, 1446, 1487, 1419, 1460, 1474, 1491, 1468], mean perf=14674/20400 (0.7193%)
Round=6, perf=[1550, 1580, 1553, 1522, 1578, 1511, 1556, 1561, 1569, 1545], mean perf=15525/20400 (0.7610%)
Round=7, perf=[1648, 1676, 1655, 1633, 1670, 1620, 1652, 1634, 1644, 1650], mean perf=16482/20400 (0.8079%)
Round=8, perf=[1692, 1719, 1696, 1679, 1705, 1668, 1696, 1669, 1681, 1704], mean perf=16909/20400 (0.8289%)
Round=9, perf=[1717, 1734, 1726, 1706, 1726, 1698, 1715, 1704, 1730, 1732], mean perf=17188/20400 (0.8425%)
Round=10, perf=[1734, 1750, 1749, 1716, 1748, 1708, 1732, 1723, 1734, 1750], mean perf=17344/20400 (0.8502%)
Round=11, perf=[1754, 1772, 1770, 1751, 1762, 1727, 1749, 1753, 1757, 1769], mean perf=17564/20400 (0.8610%)
Round=12, perf=[1764, 1781, 1772, 1766, 1768, 1741, 1756, 1760, 1767, 1786], mean perf=17661/20400 (0.8657%)
Round=13, perf=[1770, 1788, 1796, 1778, 1774, 1758, 1767, 1781, 1780, 1793], mean perf=17785/20400 (0.8718%)
Round=14, perf=[1792, 1799, 1792, 1788, 1778, 1768, 1771, 1788, 1800, 1803], mean perf=17879/20400 (0.8764%)
Mean performance of BoundedMixGauss, min_eps=0.1000, max_eps=6.8535, delta=0.0001, Perf=0.8713, seed=44
 We run FedAvg with rPDP (Dropout) ...
sample_rate: 0.0 / 0.11001677863389529, expected_batch_size: 129 / 3960
Round=0, perf=[203, 219, 210, 215, 210, 196, 209, 227, 211, 206], mean perf=2106/20400 (0.1032%)
Round=1, perf=[289, 297, 294, 310, 301, 287, 298, 304, 289, 292], mean perf=2961/20400 (0.1451%)
Round=2, perf=[211, 233, 218, 222, 228, 209, 221, 241, 221, 216], mean perf=2220/20400 (0.1088%)
Round=3, perf=[422, 438, 379, 376, 380, 386, 375, 416, 378, 408], mean perf=3958/20400 (0.1940%)
Round=4, perf=[894, 915, 899, 843, 881, 853, 904, 894, 877, 899], mean perf=8859/20400 (0.4343%)
Round=5, perf=[931, 904, 929, 916, 942, 918, 942, 909, 943, 984], mean perf=9318/20400 (0.4568%)
Round=6, perf=[1062, 1051, 1046, 989, 1058, 1036, 1063, 1026, 1040, 1057], mean perf=10428/20400 (0.5112%)
Round=7, perf=[1098, 1091, 1061, 1043, 1104, 1067, 1064, 1051, 1053, 1081], mean perf=10713/20400 (0.5251%)
Round=8, perf=[1212, 1185, 1251, 1171, 1223, 1182, 1217, 1205, 1233, 1231], mean perf=12110/20400 (0.5936%)
Round=9, perf=[1371, 1373, 1384, 1359, 1380, 1366, 1385, 1380, 1384, 1377], mean perf=13759/20400 (0.6745%)
Round=10, perf=[1350, 1346, 1364, 1330, 1371, 1335, 1346, 1341, 1341, 1376], mean perf=13500/20400 (0.6618%)
Round=11, perf=[1504, 1503, 1524, 1498, 1525, 1480, 1509, 1534, 1499, 1527], mean perf=15103/20400 (0.7403%)
Round=12, perf=[1439, 1409, 1438, 1425, 1444, 1406, 1418, 1433, 1433, 1462], mean perf=14307/20400 (0.7013%)
Round=13, perf=[1473, 1450, 1478, 1451, 1475, 1442, 1464, 1452, 1462, 1486], mean perf=14633/20400 (0.7173%)
Round=14, perf=[1509, 1482, 1515, 1499, 1506, 1497, 1525, 1508, 1514, 1509], mean perf=15064/20400 (0.7384%)
Mean performance of Dropout, eps=1.0, delta=0.0001, Perf=0.7190
