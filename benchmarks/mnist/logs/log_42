Project Path:  /data/privacyGroup/liujunxu/Fed-rPDP
noise_multiplier :  12.373046875
Round=0, perf=[1479, 1516, 1483, 1482, 1494, 1456, 1465, 1491, 1476, 1495], mean perf=14837/20400 (0.7273%)
Round=1, perf=[1885, 1873, 1884, 1868, 1872, 1848, 1874, 1872, 1858, 1882], mean perf=18716/20400 (0.9175%)
Round=2, perf=[1929, 1926, 1927, 1909, 1934, 1917, 1920, 1925, 1914, 1926], mean perf=19227/20400 (0.9425%)
Round=3, perf=[1964, 1947, 1957, 1945, 1962, 1947, 1951, 1953, 1938, 1959], mean perf=19523/20400 (0.9570%)
Round=4, perf=[1975, 1958, 1970, 1959, 1977, 1958, 1969, 1964, 1953, 1976], mean perf=19659/20400 (0.9637%)
Round=5, perf=[1986, 1969, 1981, 1966, 1979, 1976, 1974, 1976, 1963, 1985], mean perf=19755/20400 (0.9684%)
Round=6, perf=[1990, 1974, 1987, 1977, 1985, 1982, 1982, 1975, 1968, 1993], mean perf=19813/20400 (0.9712%)
Round=7, perf=[1993, 1980, 1992, 1985, 1995, 1984, 1978, 1980, 1970, 1996], mean perf=19853/20400 (0.9732%)
Round=8, perf=[2001, 1988, 1990, 1981, 1999, 1985, 1991, 1982, 1974, 2003], mean perf=19894/20400 (0.9752%)
Round=9, perf=[2002, 1989, 1997, 1988, 2001, 1994, 1993, 1988, 1979, 2001], mean perf=19932/20400 (0.9771%)
Round=10, perf=[2002, 1984, 1995, 1987, 2005, 1993, 1992, 1986, 1984, 2004], mean perf=19932/20400 (0.9771%)
Round=11, perf=[2009, 1990, 1997, 1992, 2007, 2000, 1998, 1990, 1984, 2006], mean perf=19973/20400 (0.9791%)
Round=12, perf=[2004, 1989, 2003, 1995, 2009, 1994, 2001, 1989, 1981, 2004], mean perf=19969/20400 (0.9789%)
Round=13, perf=[2010, 1991, 2001, 1992, 2014, 1997, 2004, 1992, 1991, 2012], mean perf=20004/20400 (0.9806%)
Round=14, perf=[2009, 1995, 2005, 1997, 2013, 2005, 2007, 1995, 1989, 2015], mean perf=20030/20400 (0.9819%)
Mean performance without rPDP, Mean Perf=0.9805
../../fedrpdp/accountants/analysis/rdp.py:358: UserWarning: Optimal order is the largest alpha. Please consider expanding the range of alphas to get a tighter privacy bound.
  f"Optimal order is the {extreme} alpha. Please consider expanding the range of alphas to get a tighter privacy bound."
r2 score of the curve fitting. 0.9998451794812138
sample_rate: 0.021965964339383415 / 0.021965964339383415, expected_batch_size: 86 / 3960
Round=0, perf=[244, 247, 238, 253, 253, 237, 249, 258, 263, 246], mean perf=2488/20400 (0.1220%)
Round=1, perf=[267, 262, 258, 276, 261, 277, 262, 272, 249, 256], mean perf=2640/20400 (0.1294%)
Round=2, perf=[250, 274, 253, 228, 221, 245, 249, 261, 256, 248], mean perf=2485/20400 (0.1218%)
Round=3, perf=[309, 327, 311, 305, 310, 344, 333, 341, 290, 329], mean perf=3199/20400 (0.1568%)
Round=4, perf=[429, 446, 432, 390, 394, 420, 420, 448, 411, 402], mean perf=4192/20400 (0.2055%)
Round=5, perf=[460, 521, 497, 451, 494, 464, 449, 503, 490, 494], mean perf=4823/20400 (0.2364%)
Round=6, perf=[393, 422, 409, 387, 412, 372, 384, 394, 391, 394], mean perf=3958/20400 (0.1940%)
Round=7, perf=[721, 734, 760, 679, 723, 703, 712, 743, 703, 756], mean perf=7234/20400 (0.3546%)
Round=8, perf=[775, 772, 758, 730, 743, 722, 766, 775, 727, 775], mean perf=7543/20400 (0.3698%)
Round=9, perf=[909, 941, 951, 898, 927, 918, 922, 947, 902, 968], mean perf=9283/20400 (0.4550%)
Round=10, perf=[952, 956, 958, 907, 965, 936, 920, 960, 926, 958], mean perf=9438/20400 (0.4626%)
Round=11, perf=[887, 920, 895, 874, 898, 886, 891, 921, 866, 906], mean perf=8944/20400 (0.4384%)
Round=12, perf=[946, 938, 944, 945, 963, 965, 955, 992, 974, 981], mean perf=9603/20400 (0.4707%)
Round=13, perf=[1067, 1086, 1096, 1037, 1088, 1069, 1063, 1067, 1079, 1097], mean perf=10749/20400 (0.5269%)
Round=14, perf=[1054, 1086, 1101, 1055, 1092, 1077, 1064, 1091, 1046, 1108], mean perf=10774/20400 (0.5281%)
Mean performance of StrongForAll, eps=[[0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 ...
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]], delta=0.0001, Perf=0.5086
 We run FedAvg with rPDP (ThreeLevels-0) ...
sample_rate: 0.021965964339383415 / 0.5678197400135198, expected_batch_size: 392 / 3960
Round=0, perf=[328, 353, 337, 325, 350, 322, 330, 352, 330, 340], mean perf=3367/20400 (0.1650%)
Round=1, perf=[435, 463, 445, 425, 454, 430, 436, 453, 447, 443], mean perf=4431/20400 (0.2172%)
Round=2, perf=[1028, 1046, 1020, 1016, 1060, 1028, 1040, 1030, 1045, 1035], mean perf=10348/20400 (0.5073%)
Round=3, perf=[1229, 1256, 1229, 1180, 1247, 1210, 1230, 1219, 1242, 1242], mean perf=12284/20400 (0.6022%)
Round=4, perf=[1319, 1351, 1344, 1297, 1341, 1309, 1324, 1302, 1331, 1349], mean perf=13267/20400 (0.6503%)
Round=5, perf=[1457, 1469, 1482, 1447, 1485, 1439, 1464, 1436, 1451, 1472], mean perf=14602/20400 (0.7158%)
Round=6, perf=[1556, 1556, 1558, 1551, 1596, 1547, 1560, 1544, 1554, 1556], mean perf=15578/20400 (0.7636%)
Round=7, perf=[1645, 1651, 1625, 1624, 1648, 1625, 1641, 1618, 1626, 1628], mean perf=16331/20400 (0.8005%)
Round=8, perf=[1679, 1686, 1666, 1661, 1711, 1663, 1675, 1669, 1681, 1674], mean perf=16765/20400 (0.8218%)
Round=9, perf=[1700, 1711, 1709, 1692, 1725, 1692, 1706, 1690, 1702, 1709], mean perf=17036/20400 (0.8351%)
Round=10, perf=[1743, 1723, 1729, 1710, 1748, 1707, 1727, 1713, 1718, 1723], mean perf=17241/20400 (0.8451%)
Round=11, perf=[1760, 1749, 1757, 1735, 1766, 1730, 1742, 1738, 1750, 1749], mean perf=17476/20400 (0.8567%)
Round=12, perf=[1750, 1751, 1757, 1745, 1768, 1738, 1743, 1736, 1750, 1753], mean perf=17491/20400 (0.8574%)
Round=13, perf=[1787, 1772, 1778, 1767, 1789, 1760, 1757, 1770, 1782, 1782], mean perf=17744/20400 (0.8698%)
Round=14, perf=[1794, 1789, 1795, 1779, 1792, 1778, 1777, 1772, 1790, 1792], mean perf=17858/20400 (0.8754%)
Mean performance of ThreeLevels, min_eps=0.1000, max_eps=5.0000, delta=0.0001, Perf=0.8675, seed=42
 We run FedAvg with rPDP (Dropout) ...
sample_rate: 0.0 / 0.1068888531010202, expected_batch_size: 126 / 3960
Round=0, perf=[318, 357, 375, 313, 333, 320, 316, 362, 331, 329], mean perf=3354/20400 (0.1644%)
Round=1, perf=[306, 291, 302, 325, 289, 332, 314, 313, 330, 308], mean perf=3110/20400 (0.1525%)
Round=2, perf=[399, 370, 371, 402, 387, 405, 393, 363, 377, 374], mean perf=3841/20400 (0.1883%)
Round=3, perf=[462, 472, 443, 440, 450, 434, 467, 432, 430, 426], mean perf=4456/20400 (0.2184%)
Round=4, perf=[643, 597, 594, 603, 582, 552, 612, 598, 583, 612], mean perf=5976/20400 (0.2929%)
Round=5, perf=[768, 750, 753, 736, 752, 694, 743, 748, 738, 742], mean perf=7424/20400 (0.3639%)
Round=6, perf=[939, 930, 945, 903, 949, 882, 934, 916, 940, 931], mean perf=9269/20400 (0.4544%)
Round=7, perf=[1005, 997, 982, 969, 998, 963, 968, 991, 984, 1004], mean perf=9861/20400 (0.4834%)
Round=8, perf=[1169, 1156, 1130, 1114, 1176, 1102, 1139, 1157, 1126, 1161], mean perf=11430/20400 (0.5603%)
Round=9, perf=[1328, 1320, 1307, 1273, 1308, 1271, 1308, 1297, 1314, 1322], mean perf=13048/20400 (0.6396%)
Round=10, perf=[1304, 1302, 1288, 1263, 1308, 1237, 1295, 1293, 1285, 1316], mean perf=12891/20400 (0.6319%)
Round=11, perf=[1395, 1389, 1392, 1332, 1376, 1320, 1380, 1352, 1375, 1375], mean perf=13686/20400 (0.6709%)
Round=12, perf=[1490, 1486, 1482, 1448, 1475, 1451, 1494, 1455, 1471, 1461], mean perf=14713/20400 (0.7212%)
Round=13, perf=[1479, 1483, 1474, 1451, 1474, 1407, 1451, 1457, 1472, 1458], mean perf=14606/20400 (0.7160%)
Round=14, perf=[1526, 1548, 1530, 1512, 1536, 1505, 1519, 1520, 1539, 1521], mean perf=15256/20400 (0.7478%)
Mean performance of Dropout, eps=1.0, delta=0.0001, Perf=0.7283
sample_rate: 0.02196661312104647 / 0.02196661312104647, expected_batch_size: 86 / 3960
Round=0, perf=[194, 183, 177, 195, 176, 212, 194, 211, 184, 179], mean perf=1905/20400 (0.0934%)
Round=1, perf=[287, 284, 283, 283, 263, 286, 289, 230, 273, 280], mean perf=2758/20400 (0.1352%)
Round=2, perf=[439, 451, 413, 441, 422, 451, 418, 418, 434, 440], mean perf=4327/20400 (0.2121%)
Round=3, perf=[395, 390, 356, 381, 380, 395, 383, 377, 384, 362], mean perf=3803/20400 (0.1864%)
Round=4, perf=[555, 591, 567, 536, 563, 538, 556, 565, 573, 549], mean perf=5593/20400 (0.2742%)
Round=5, perf=[625, 620, 607, 583, 594, 615, 616, 606, 613, 581], mean perf=6060/20400 (0.2971%)
Round=6, perf=[652, 668, 631, 633, 662, 615, 631, 640, 673, 639], mean perf=6444/20400 (0.3159%)
Round=7, perf=[770, 776, 779, 761, 784, 739, 769, 771, 733, 753], mean perf=7635/20400 (0.3743%)
Round=8, perf=[800, 852, 838, 791, 816, 795, 837, 824, 813, 794], mean perf=8160/20400 (0.4000%)
Round=9, perf=[795, 792, 789, 757, 784, 758, 810, 792, 791, 794], mean perf=7862/20400 (0.3854%)
Round=10, perf=[905, 931, 936, 882, 915, 862, 921, 920, 917, 927], mean perf=9116/20400 (0.4469%)
Round=11, perf=[942, 976, 966, 942, 965, 916, 946, 974, 960, 979], mean perf=9566/20400 (0.4689%)
Round=12, perf=[1019, 1056, 1040, 1004, 1055, 993, 1013, 998, 1030, 1023], mean perf=10231/20400 (0.5015%)
Round=13, perf=[1103, 1114, 1146, 1096, 1156, 1054, 1059, 1107, 1124, 1106], mean perf=11065/20400 (0.5424%)
Round=14, perf=[1157, 1177, 1174, 1146, 1170, 1153, 1129, 1169, 1165, 1174], mean perf=11614/20400 (0.5693%)
Mean performance of StrongForAll, eps=[[0.100005 0.100005 0.100005 ... 0.100005 0.100005 0.100005]
 [0.100005 0.100005 0.100005 ... 0.100005 0.100005 0.100005]
 [0.100005 0.100005 0.100005 ... 0.100005 0.100005 0.100005]
 ...
 [0.100005 0.100005 0.100005 ... 0.100005 0.100005 0.100005]
 [0.100005 0.100005 0.100005 ... 0.100005 0.100005 0.100005]
 [0.100005 0.100005 0.100005 ... 0.100005 0.100005 0.100005]], delta=0.0001, Perf=0.5377
 We run FedAvg with rPDP (BoundedPareto-0) ...
sample_rate: 0.02196661312104647 / 1.0, expected_batch_size: 257 / 3960
Round=0, perf=[230, 245, 235, 236, 246, 221, 233, 259, 238, 231], mean perf=2374/20400 (0.1164%)
Round=1, perf=[368, 406, 382, 365, 393, 363, 382, 409, 383, 395], mean perf=3846/20400 (0.1885%)
Round=2, perf=[520, 540, 536, 505, 544, 506, 519, 564, 522, 542], mean perf=5298/20400 (0.2597%)
Round=3, perf=[1059, 1079, 1065, 1035, 1060, 1034, 1056, 1068, 1063, 1067], mean perf=10586/20400 (0.5189%)
Round=4, perf=[1162, 1197, 1178, 1153, 1197, 1158, 1157, 1176, 1186, 1168], mean perf=11732/20400 (0.5751%)
Round=5, perf=[1371, 1385, 1364, 1353, 1362, 1357, 1337, 1347, 1401, 1371], mean perf=13648/20400 (0.6690%)
Round=6, perf=[1446, 1452, 1447, 1428, 1463, 1433, 1423, 1435, 1439, 1441], mean perf=14407/20400 (0.7062%)
Round=7, perf=[1556, 1564, 1555, 1521, 1568, 1533, 1548, 1542, 1544, 1549], mean perf=15480/20400 (0.7588%)
Round=8, perf=[1558, 1563, 1561, 1543, 1553, 1551, 1552, 1550, 1551, 1578], mean perf=15560/20400 (0.7627%)
Round=9, perf=[1632, 1636, 1639, 1593, 1642, 1614, 1626, 1621, 1635, 1634], mean perf=16272/20400 (0.7976%)
Round=10, perf=[1686, 1684, 1707, 1684, 1701, 1690, 1677, 1689, 1692, 1697], mean perf=16907/20400 (0.8288%)
Round=11, perf=[1723, 1715, 1719, 1687, 1724, 1690, 1721, 1704, 1712, 1718], mean perf=17113/20400 (0.8389%)
Round=12, perf=[1753, 1740, 1738, 1726, 1747, 1725, 1735, 1736, 1747, 1746], mean perf=17393/20400 (0.8526%)
Round=13, perf=[1774, 1764, 1762, 1750, 1772, 1742, 1763, 1769, 1773, 1772], mean perf=17641/20400 (0.8648%)
Round=14, perf=[1779, 1780, 1780, 1764, 1782, 1752, 1782, 1775, 1781, 1786], mean perf=17761/20400 (0.8706%)
Mean performance of BoundedPareto, min_eps=0.1000, max_eps=10.0000, delta=0.0001, Perf=0.8627, seed=42
 We run FedAvg with rPDP (Dropout) ...
sample_rate: 0.0 / 0.06495669459739746, expected_batch_size: 82 / 3960
Round=0, perf=[215, 207, 213, 218, 201, 231, 218, 230, 213, 202], mean perf=2148/20400 (0.1053%)
Round=1, perf=[223, 227, 217, 227, 212, 251, 233, 275, 223, 229], mean perf=2317/20400 (0.1136%)
Round=2, perf=[222, 238, 230, 224, 245, 211, 213, 214, 209, 222], mean perf=2228/20400 (0.1092%)
Round=3, perf=[302, 292, 283, 282, 287, 287, 295, 281, 303, 292], mean perf=2904/20400 (0.1424%)
Round=4, perf=[454, 449, 422, 426, 440, 438, 426, 457, 439, 463], mean perf=4414/20400 (0.2164%)
Round=5, perf=[332, 341, 349, 311, 339, 349, 329, 370, 341, 328], mean perf=3389/20400 (0.1661%)
Round=6, perf=[445, 465, 462, 422, 462, 461, 455, 442, 460, 470], mean perf=4544/20400 (0.2227%)
Round=7, perf=[483, 489, 450, 479, 499, 482, 490, 475, 489, 491], mean perf=4827/20400 (0.2366%)
Round=8, perf=[529, 502, 535, 515, 558, 554, 555, 497, 538, 545], mean perf=5328/20400 (0.2612%)
Round=9, perf=[644, 608, 608, 585, 627, 605, 622, 586, 627, 608], mean perf=6120/20400 (0.3000%)
Round=10, perf=[716, 735, 702, 665, 709, 699, 663, 682, 688, 699], mean perf=6958/20400 (0.3411%)
Round=11, perf=[764, 824, 784, 766, 788, 755, 739, 789, 754, 776], mean perf=7739/20400 (0.3794%)
Round=12, perf=[784, 841, 821, 790, 816, 763, 801, 816, 776, 797], mean perf=8005/20400 (0.3924%)
Round=13, perf=[923, 952, 947, 912, 931, 867, 920, 939, 896, 932], mean perf=9219/20400 (0.4519%)
Round=14, perf=[982, 995, 1009, 987, 983, 954, 951, 1004, 957, 972], mean perf=9794/20400 (0.4801%)
Mean performance of Dropout, eps=1.0, delta=0.0001, Perf=0.4415
sample_rate: 0.021965964339383415 / 0.021965964339383415, expected_batch_size: 86 / 3960
Round=0, perf=[232, 244, 254, 239, 242, 227, 238, 237, 237, 238], mean perf=2388/20400 (0.1171%)
Round=1, perf=[418, 410, 419, 377, 421, 417, 398, 417, 424, 410], mean perf=4111/20400 (0.2015%)
Round=2, perf=[346, 354, 366, 338, 366, 375, 366, 369, 371, 362], mean perf=3613/20400 (0.1771%)
Round=3, perf=[478, 506, 502, 483, 479, 493, 445, 490, 460, 491], mean perf=4827/20400 (0.2366%)
Round=4, perf=[512, 529, 560, 512, 509, 504, 543, 534, 500, 516], mean perf=5219/20400 (0.2558%)
Round=5, perf=[547, 566, 549, 532, 536, 560, 551, 533, 537, 534], mean perf=5445/20400 (0.2669%)
Round=6, perf=[379, 374, 357, 344, 354, 352, 348, 364, 349, 351], mean perf=3572/20400 (0.1751%)
Round=7, perf=[585, 590, 587, 552, 597, 566, 557, 593, 578, 584], mean perf=5789/20400 (0.2838%)
Round=8, perf=[629, 627, 647, 597, 617, 616, 604, 646, 596, 624], mean perf=6203/20400 (0.3041%)
Round=9, perf=[748, 754, 756, 730, 745, 724, 740, 764, 741, 735], mean perf=7437/20400 (0.3646%)
Round=10, perf=[831, 801, 816, 789, 804, 789, 794, 804, 815, 803], mean perf=8046/20400 (0.3944%)
Round=11, perf=[850, 874, 849, 835, 853, 810, 848, 868, 861, 879], mean perf=8527/20400 (0.4180%)
Round=12, perf=[933, 943, 937, 894, 911, 892, 922, 936, 912, 913], mean perf=9193/20400 (0.4506%)
Round=13, perf=[949, 944, 969, 928, 938, 924, 967, 955, 960, 918], mean perf=9452/20400 (0.4633%)
Round=14, perf=[966, 970, 970, 973, 951, 931, 954, 1002, 968, 984], mean perf=9669/20400 (0.4740%)
Mean performance of StrongForAll, eps=[[0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 ...
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]], delta=0.0001, Perf=0.4626
 We run FedAvg with rPDP (BoundedMixGauss-0) ...
sample_rate: 0.021965964339383415 / 0.7106952491215538, expected_batch_size: 400 / 3960
Round=0, perf=[217, 229, 217, 225, 226, 203, 225, 246, 223, 216], mean perf=2227/20400 (0.1092%)
Round=1, perf=[628, 625, 613, 589, 619, 597, 595, 648, 612, 611], mean perf=6137/20400 (0.3008%)
Round=2, perf=[959, 994, 954, 944, 971, 929, 960, 977, 995, 972], mean perf=9655/20400 (0.4733%)
Round=3, perf=[1223, 1235, 1225, 1169, 1237, 1142, 1196, 1218, 1224, 1202], mean perf=12071/20400 (0.5917%)
Round=4, perf=[1332, 1357, 1367, 1315, 1377, 1284, 1321, 1346, 1354, 1343], mean perf=13396/20400 (0.6567%)
Round=5, perf=[1421, 1450, 1454, 1400, 1464, 1378, 1422, 1434, 1437, 1434], mean perf=14294/20400 (0.7007%)
Round=6, perf=[1510, 1518, 1516, 1473, 1527, 1459, 1521, 1502, 1517, 1509], mean perf=15052/20400 (0.7378%)
Round=7, perf=[1599, 1617, 1583, 1569, 1621, 1561, 1609, 1588, 1596, 1587], mean perf=15930/20400 (0.7809%)
Round=8, perf=[1663, 1651, 1651, 1621, 1687, 1629, 1665, 1641, 1653, 1655], mean perf=16516/20400 (0.8096%)
Round=9, perf=[1693, 1688, 1691, 1660, 1714, 1664, 1696, 1663, 1682, 1697], mean perf=16848/20400 (0.8259%)
Round=10, perf=[1719, 1709, 1714, 1695, 1733, 1679, 1710, 1694, 1705, 1715], mean perf=17073/20400 (0.8369%)
Round=11, perf=[1734, 1729, 1742, 1734, 1758, 1711, 1736, 1716, 1732, 1746], mean perf=17338/20400 (0.8499%)
Round=12, perf=[1755, 1756, 1765, 1754, 1772, 1723, 1750, 1735, 1750, 1753], mean perf=17513/20400 (0.8585%)
Round=13, perf=[1770, 1780, 1774, 1771, 1781, 1742, 1772, 1753, 1768, 1769], mean perf=17680/20400 (0.8667%)
Round=14, perf=[1784, 1785, 1781, 1769, 1788, 1746, 1781, 1768, 1785, 1785], mean perf=17772/20400 (0.8712%)
Mean performance of BoundedMixGauss, min_eps=0.1000, max_eps=6.5418, delta=0.0001, Perf=0.8655, seed=42
 We run FedAvg with rPDP (Dropout) ...
sample_rate: 0.0 / 0.10737446763142215, expected_batch_size: 126 / 3960
Round=0, perf=[203, 219, 209, 215, 210, 195, 209, 227, 211, 205], mean perf=2103/20400 (0.1031%)
Round=1, perf=[222, 230, 217, 223, 225, 215, 228, 241, 220, 219], mean perf=2240/20400 (0.1098%)
Round=2, perf=[627, 631, 626, 599, 603, 580, 595, 650, 634, 619], mean perf=6164/20400 (0.3022%)
Round=3, perf=[766, 814, 777, 735, 765, 735, 735, 791, 753, 760], mean perf=7631/20400 (0.3741%)
Round=4, perf=[974, 975, 966, 938, 963, 959, 962, 980, 972, 961], mean perf=9650/20400 (0.4730%)
Round=5, perf=[984, 992, 998, 1001, 1003, 966, 994, 1018, 1011, 1043], mean perf=10010/20400 (0.4907%)
Round=6, perf=[1137, 1158, 1141, 1111, 1151, 1131, 1132, 1169, 1159, 1166], mean perf=11455/20400 (0.5615%)
Round=7, perf=[1176, 1220, 1179, 1167, 1189, 1197, 1200, 1168, 1189, 1203], mean perf=11888/20400 (0.5827%)
Round=8, perf=[1182, 1216, 1210, 1154, 1199, 1185, 1197, 1203, 1199, 1202], mean perf=11947/20400 (0.5856%)
Round=9, perf=[1311, 1300, 1325, 1282, 1308, 1273, 1307, 1318, 1312, 1328], mean perf=13064/20400 (0.6404%)
Round=10, perf=[1345, 1369, 1383, 1370, 1396, 1334, 1365, 1379, 1392, 1380], mean perf=13713/20400 (0.6722%)
Round=11, perf=[1433, 1442, 1448, 1413, 1443, 1415, 1419, 1428, 1446, 1435], mean perf=14322/20400 (0.7021%)
Round=12, perf=[1419, 1408, 1446, 1374, 1420, 1386, 1401, 1422, 1418, 1409], mean perf=14103/20400 (0.6913%)
Round=13, perf=[1441, 1458, 1457, 1427, 1459, 1439, 1429, 1460, 1439, 1453], mean perf=14462/20400 (0.7089%)
Round=14, perf=[1490, 1514, 1485, 1483, 1503, 1485, 1493, 1501, 1486, 1479], mean perf=14919/20400 (0.7313%)
Mean performance of Dropout, eps=1.0, delta=0.0001, Perf=0.7105
