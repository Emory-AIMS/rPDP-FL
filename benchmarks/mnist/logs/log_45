Project Path:  /data/privacyGroup/liujunxu/Fed-rPDP
noise_multiplier :  12.373046875
Round=0, perf=[1593, 1605, 1590, 1565, 1614, 1563, 1599, 1586, 1594, 1601], mean perf=15910/20400 (0.7799%)
Round=1, perf=[1882, 1879, 1880, 1873, 1875, 1851, 1877, 1876, 1873, 1887], mean perf=18753/20400 (0.9193%)
Round=2, perf=[1931, 1926, 1919, 1923, 1934, 1914, 1923, 1928, 1910, 1936], mean perf=19244/20400 (0.9433%)
Round=3, perf=[1962, 1945, 1946, 1947, 1948, 1937, 1943, 1958, 1933, 1954], mean perf=19473/20400 (0.9546%)
Round=4, perf=[1975, 1958, 1968, 1957, 1968, 1963, 1963, 1969, 1953, 1977], mean perf=19651/20400 (0.9633%)
Round=5, perf=[1983, 1968, 1977, 1963, 1975, 1976, 1972, 1970, 1965, 1986], mean perf=19735/20400 (0.9674%)
Round=6, perf=[1985, 1973, 1978, 1970, 1988, 1980, 1984, 1972, 1969, 1987], mean perf=19786/20400 (0.9699%)
Round=7, perf=[1994, 1976, 1986, 1975, 1992, 1988, 1989, 1982, 1974, 1998], mean perf=19854/20400 (0.9732%)
Round=8, perf=[1994, 1981, 1991, 1981, 1997, 1985, 1995, 1984, 1981, 2000], mean perf=19889/20400 (0.9750%)
Round=9, perf=[1999, 1987, 1999, 1984, 1998, 1988, 2005, 1986, 1980, 2000], mean perf=19926/20400 (0.9768%)
Round=10, perf=[2001, 1988, 1997, 1987, 2002, 1992, 2000, 1987, 1984, 2006], mean perf=19944/20400 (0.9776%)
Round=11, perf=[2004, 1989, 1995, 1992, 2010, 1996, 1998, 1989, 1991, 2008], mean perf=19972/20400 (0.9790%)
Round=12, perf=[2003, 1989, 2002, 1994, 2011, 1998, 2005, 1991, 1987, 2007], mean perf=19987/20400 (0.9798%)
Round=13, perf=[2007, 1992, 1998, 1994, 2012, 2001, 2003, 1992, 1991, 2009], mean perf=19999/20400 (0.9803%)
Round=14, perf=[2009, 1991, 2003, 2000, 2012, 2004, 2006, 1992, 1987, 2013], mean perf=20017/20400 (0.9812%)
Mean performance without rPDP, Mean Perf=0.9804
../../fedrpdp/accountants/analysis/rdp.py:358: UserWarning: Optimal order is the largest alpha. Please consider expanding the range of alphas to get a tighter privacy bound.
  f"Optimal order is the {extreme} alpha. Please consider expanding the range of alphas to get a tighter privacy bound."
r2 score of the curve fitting. 0.9998451794812138
sample_rate: 0.021965964339383415 / 0.021965964339383415, expected_batch_size: 86 / 3960
Round=0, perf=[268, 301, 286, 303, 315, 262, 270, 294, 286, 265], mean perf=2850/20400 (0.1397%)
Round=1, perf=[272, 290, 265, 255, 249, 238, 244, 272, 246, 268], mean perf=2599/20400 (0.1274%)
Round=2, perf=[377, 403, 415, 359, 408, 382, 377, 388, 385, 379], mean perf=3873/20400 (0.1899%)
Round=3, perf=[534, 522, 503, 454, 515, 529, 523, 521, 539, 499], mean perf=5139/20400 (0.2519%)
Round=4, perf=[503, 513, 482, 470, 472, 493, 480, 505, 465, 464], mean perf=4847/20400 (0.2376%)
Round=5, perf=[463, 428, 422, 440, 442, 450, 449, 421, 429, 394], mean perf=4338/20400 (0.2126%)
Round=6, perf=[611, 620, 608, 573, 574, 584, 583, 619, 589, 564], mean perf=5925/20400 (0.2904%)
Round=7, perf=[575, 553, 552, 551, 572, 547, 554, 535, 541, 544], mean perf=5524/20400 (0.2708%)
Round=8, perf=[689, 642, 656, 620, 692, 656, 646, 648, 641, 657], mean perf=6547/20400 (0.3209%)
Round=9, perf=[696, 676, 646, 679, 705, 650, 678, 671, 658, 645], mean perf=6704/20400 (0.3286%)
Round=10, perf=[752, 755, 728, 740, 783, 742, 749, 751, 766, 740], mean perf=7506/20400 (0.3679%)
Round=11, perf=[815, 818, 771, 801, 821, 817, 812, 798, 807, 824], mean perf=8084/20400 (0.3963%)
Round=12, perf=[798, 777, 795, 789, 838, 812, 840, 778, 804, 822], mean perf=8053/20400 (0.3948%)
Round=13, perf=[953, 979, 974, 926, 990, 930, 977, 958, 927, 987], mean perf=9601/20400 (0.4706%)
Round=14, perf=[1171, 1182, 1217, 1171, 1195, 1176, 1191, 1189, 1197, 1190], mean perf=11879/20400 (0.5823%)
Mean performance of StrongForAll, eps=[[0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 ...
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]], delta=0.0001, Perf=0.4826
 We run FedAvg with rPDP (ThreeLevels-0) ...
sample_rate: 0.021965964339383415 / 0.5678197400135198, expected_batch_size: 392 / 3960
Round=0, perf=[291, 319, 302, 294, 310, 288, 298, 319, 292, 307], mean perf=3020/20400 (0.1480%)
Round=1, perf=[418, 441, 426, 410, 433, 406, 418, 443, 421, 425], mean perf=4241/20400 (0.2079%)
Round=2, perf=[739, 730, 724, 709, 746, 703, 714, 760, 735, 744], mean perf=7304/20400 (0.3580%)
Round=3, perf=[1124, 1135, 1120, 1097, 1144, 1096, 1113, 1124, 1116, 1133], mean perf=11202/20400 (0.5491%)
Round=4, perf=[1373, 1372, 1401, 1338, 1386, 1347, 1347, 1343, 1360, 1377], mean perf=13644/20400 (0.6688%)
Round=5, perf=[1487, 1482, 1488, 1441, 1492, 1444, 1460, 1461, 1479, 1457], mean perf=14691/20400 (0.7201%)
Round=6, perf=[1594, 1583, 1572, 1545, 1584, 1546, 1564, 1565, 1560, 1562], mean perf=15675/20400 (0.7684%)
Round=7, perf=[1645, 1634, 1635, 1609, 1639, 1605, 1625, 1611, 1616, 1633], mean perf=16252/20400 (0.7967%)
Round=8, perf=[1670, 1669, 1665, 1644, 1667, 1634, 1656, 1654, 1644, 1674], mean perf=16577/20400 (0.8126%)
Round=9, perf=[1706, 1732, 1719, 1700, 1707, 1687, 1720, 1706, 1707, 1716], mean perf=17100/20400 (0.8382%)
Round=10, perf=[1721, 1733, 1725, 1714, 1715, 1691, 1728, 1710, 1712, 1729], mean perf=17178/20400 (0.8421%)
Round=11, perf=[1730, 1751, 1741, 1730, 1732, 1707, 1740, 1723, 1725, 1751], mean perf=17330/20400 (0.8495%)
Round=12, perf=[1778, 1767, 1775, 1757, 1765, 1750, 1764, 1751, 1755, 1779], mean perf=17641/20400 (0.8648%)
Round=13, perf=[1785, 1778, 1786, 1766, 1776, 1760, 1779, 1761, 1771, 1784], mean perf=17746/20400 (0.8699%)
Round=14, perf=[1807, 1793, 1793, 1780, 1785, 1777, 1795, 1768, 1786, 1801], mean perf=17885/20400 (0.8767%)
Mean performance of ThreeLevels, min_eps=0.1000, max_eps=5.0000, delta=0.0001, Perf=0.8705, seed=45
 We run FedAvg with rPDP (Dropout) ...
sample_rate: 0.0 / 0.1068888531010202, expected_batch_size: 126 / 3960
Round=0, perf=[266, 298, 257, 290, 309, 271, 270, 312, 280, 259], mean perf=2812/20400 (0.1378%)
Round=1, perf=[228, 244, 246, 254, 260, 227, 239, 254, 241, 243], mean perf=2436/20400 (0.1194%)
Round=2, perf=[581, 645, 602, 571, 589, 573, 566, 633, 590, 611], mean perf=5961/20400 (0.2922%)
Round=3, perf=[618, 625, 650, 578, 626, 588, 580, 639, 615, 632], mean perf=6151/20400 (0.3015%)
Round=4, perf=[806, 838, 802, 796, 814, 803, 785, 824, 800, 822], mean perf=8090/20400 (0.3966%)
Round=5, perf=[842, 918, 886, 832, 887, 843, 848, 895, 884, 881], mean perf=8716/20400 (0.4273%)
Round=6, perf=[1062, 1053, 1057, 1052, 1101, 1011, 1019, 1070, 1052, 1071], mean perf=10548/20400 (0.5171%)
Round=7, perf=[1072, 1081, 1073, 1077, 1145, 1027, 1047, 1096, 1091, 1089], mean perf=10798/20400 (0.5293%)
Round=8, perf=[1222, 1247, 1236, 1211, 1265, 1184, 1220, 1203, 1229, 1217], mean perf=12234/20400 (0.5997%)
Round=9, perf=[1246, 1271, 1270, 1244, 1282, 1235, 1221, 1269, 1253, 1265], mean perf=12556/20400 (0.6155%)
Round=10, perf=[1260, 1277, 1270, 1247, 1303, 1233, 1250, 1265, 1269, 1274], mean perf=12648/20400 (0.6200%)
Round=11, perf=[1430, 1442, 1431, 1435, 1463, 1423, 1446, 1440, 1453, 1445], mean perf=14408/20400 (0.7063%)
Round=12, perf=[1529, 1528, 1531, 1509, 1539, 1544, 1518, 1530, 1526, 1515], mean perf=15269/20400 (0.7485%)
Round=13, perf=[1472, 1486, 1474, 1461, 1497, 1458, 1462, 1494, 1488, 1472], mean perf=14764/20400 (0.7237%)
Round=14, perf=[1529, 1537, 1521, 1525, 1568, 1498, 1525, 1536, 1536, 1534], mean perf=15309/20400 (0.7504%)
Mean performance of Dropout, eps=1.0, delta=0.0001, Perf=0.7409
sample_rate: 0.021966333073908658 / 0.021966333073908658, expected_batch_size: 86 / 3960
Round=0, perf=[246, 265, 252, 235, 237, 229, 209, 254, 225, 242], mean perf=2394/20400 (0.1174%)
Round=1, perf=[344, 373, 396, 342, 353, 323, 327, 363, 363, 350], mean perf=3534/20400 (0.1732%)
Round=2, perf=[333, 308, 357, 296, 333, 312, 310, 315, 321, 321], mean perf=3206/20400 (0.1572%)
Round=3, perf=[397, 413, 433, 417, 420, 389, 397, 414, 407, 402], mean perf=4089/20400 (0.2004%)
Round=4, perf=[379, 389, 413, 386, 398, 393, 396, 398, 419, 386], mean perf=3957/20400 (0.1940%)
Round=5, perf=[388, 393, 373, 424, 404, 373, 390, 404, 405, 402], mean perf=3956/20400 (0.1939%)
Round=6, perf=[655, 702, 676, 644, 670, 641, 640, 685, 618, 697], mean perf=6628/20400 (0.3249%)
Round=7, perf=[636, 669, 623, 595, 631, 641, 649, 655, 632, 648], mean perf=6379/20400 (0.3127%)
Round=8, perf=[737, 743, 739, 693, 759, 727, 711, 766, 732, 748], mean perf=7355/20400 (0.3605%)
Round=9, perf=[747, 771, 761, 734, 751, 729, 745, 776, 765, 763], mean perf=7542/20400 (0.3697%)
Round=10, perf=[874, 864, 845, 856, 868, 797, 840, 903, 839, 901], mean perf=8587/20400 (0.4209%)
Round=11, perf=[974, 994, 988, 1001, 979, 949, 951, 1019, 978, 1016], mean perf=9849/20400 (0.4828%)
Round=12, perf=[1018, 1028, 1049, 983, 1038, 993, 989, 1014, 1017, 1026], mean perf=10155/20400 (0.4978%)
Round=13, perf=[1040, 1077, 1085, 1035, 1070, 1043, 1032, 1063, 1075, 1096], mean perf=10616/20400 (0.5204%)
Round=14, perf=[1105, 1113, 1106, 1072, 1102, 1099, 1063, 1126, 1069, 1094], mean perf=10949/20400 (0.5367%)
Mean performance of StrongForAll, eps=[[0.10000284 0.10000284 0.10000284 ... 0.10000284 0.10000284 0.10000284]
 [0.10000284 0.10000284 0.10000284 ... 0.10000284 0.10000284 0.10000284]
 [0.10000284 0.10000284 0.10000284 ... 0.10000284 0.10000284 0.10000284]
 ...
 [0.10000284 0.10000284 0.10000284 ... 0.10000284 0.10000284 0.10000284]
 [0.10000284 0.10000284 0.10000284 ... 0.10000284 0.10000284 0.10000284]
 [0.10000284 0.10000284 0.10000284 ... 0.10000284 0.10000284 0.10000284]], delta=0.0001, Perf=0.5183
 We run FedAvg with rPDP (BoundedPareto-0) ...
sample_rate: 0.02197399569776978 / 0.6352794845722687, expected_batch_size: 251 / 3960
Round=0, perf=[207, 220, 211, 217, 212, 195, 210, 232, 212, 209], mean perf=2125/20400 (0.1042%)
Round=1, perf=[298, 317, 294, 292, 313, 279, 301, 311, 300, 305], mean perf=3010/20400 (0.1475%)
Round=2, perf=[803, 805, 810, 783, 812, 795, 795, 833, 819, 825], mean perf=8080/20400 (0.3961%)
Round=3, perf=[1036, 1047, 1045, 1020, 1054, 1015, 1017, 1060, 1060, 1046], mean perf=10400/20400 (0.5098%)
Round=4, perf=[1272, 1316, 1322, 1278, 1295, 1259, 1260, 1296, 1313, 1305], mean perf=12916/20400 (0.6331%)
Round=5, perf=[1379, 1420, 1422, 1364, 1397, 1346, 1356, 1387, 1400, 1390], mean perf=13861/20400 (0.6795%)
Round=6, perf=[1441, 1463, 1463, 1392, 1446, 1376, 1425, 1428, 1447, 1437], mean perf=14318/20400 (0.7019%)
Round=7, perf=[1573, 1588, 1582, 1536, 1556, 1518, 1546, 1546, 1551, 1563], mean perf=15559/20400 (0.7627%)
Round=8, perf=[1627, 1642, 1641, 1582, 1606, 1572, 1603, 1609, 1610, 1630], mean perf=16122/20400 (0.7903%)
Round=9, perf=[1648, 1665, 1670, 1635, 1655, 1621, 1638, 1638, 1634, 1655], mean perf=16459/20400 (0.8068%)
Round=10, perf=[1689, 1698, 1702, 1674, 1680, 1649, 1675, 1654, 1659, 1692], mean perf=16772/20400 (0.8222%)
Round=11, perf=[1698, 1734, 1742, 1695, 1723, 1687, 1705, 1690, 1700, 1717], mean perf=17091/20400 (0.8378%)
Round=12, perf=[1728, 1736, 1749, 1717, 1733, 1704, 1719, 1720, 1704, 1743], mean perf=17253/20400 (0.8457%)
Round=13, perf=[1752, 1762, 1766, 1725, 1753, 1718, 1742, 1726, 1739, 1754], mean perf=17437/20400 (0.8548%)
Round=14, perf=[1764, 1784, 1779, 1757, 1772, 1744, 1779, 1750, 1773, 1771], mean perf=17673/20400 (0.8663%)
Mean performance of BoundedPareto, min_eps=0.1001, max_eps=5.7131, delta=0.0001, Perf=0.8556, seed=45
 We run FedAvg with rPDP (Dropout) ...
sample_rate: 0.0 / 0.06484060020381464, expected_batch_size: 81 / 3960
Round=0, perf=[233, 236, 248, 214, 227, 243, 223, 208, 212, 230], mean perf=2274/20400 (0.1115%)
Round=1, perf=[261, 249, 276, 247, 247, 258, 223, 252, 249, 247], mean perf=2509/20400 (0.1230%)
Round=2, perf=[213, 238, 228, 219, 206, 205, 193, 226, 210, 222], mean perf=2160/20400 (0.1059%)
Round=3, perf=[249, 221, 240, 253, 215, 212, 226, 239, 233, 234], mean perf=2322/20400 (0.1138%)
Round=4, perf=[329, 328, 321, 300, 290, 279, 307, 313, 316, 311], mean perf=3094/20400 (0.1517%)
Round=5, perf=[431, 465, 456, 397, 419, 410, 414, 430, 418, 439], mean perf=4279/20400 (0.2098%)
Round=6, perf=[413, 444, 456, 424, 411, 396, 402, 436, 390, 431], mean perf=4203/20400 (0.2060%)
Round=7, perf=[337, 361, 354, 325, 328, 336, 312, 337, 317, 325], mean perf=3332/20400 (0.1633%)
Round=8, perf=[565, 588, 564, 519, 559, 546, 548, 551, 558, 549], mean perf=5547/20400 (0.2719%)
Round=9, perf=[670, 692, 689, 672, 673, 656, 668, 678, 650, 676], mean perf=6724/20400 (0.3296%)
Round=10, perf=[606, 619, 612, 586, 610, 583, 589, 599, 588, 619], mean perf=6011/20400 (0.2947%)
Round=11, perf=[657, 713, 715, 672, 667, 654, 662, 677, 676, 697], mean perf=6790/20400 (0.3328%)
Round=12, perf=[681, 675, 714, 659, 672, 630, 667, 659, 659, 682], mean perf=6698/20400 (0.3283%)
Round=13, perf=[787, 798, 820, 761, 779, 764, 790, 763, 766, 780], mean perf=7808/20400 (0.3827%)
Round=14, perf=[851, 853, 893, 839, 868, 857, 886, 849, 868, 906], mean perf=8670/20400 (0.4250%)
Mean performance of Dropout, eps=1.0, delta=0.0001, Perf=0.3787
sample_rate: 0.021965964339383415 / 0.021965964339383415, expected_batch_size: 86 / 3960
Round=0, perf=[203, 219, 210, 216, 210, 195, 209, 227, 210, 207], mean perf=2106/20400 (0.1032%)
Round=1, perf=[211, 197, 187, 212, 205, 206, 222, 209, 214, 195], mean perf=2058/20400 (0.1009%)
Round=2, perf=[206, 201, 188, 226, 196, 210, 211, 231, 198, 208], mean perf=2075/20400 (0.1017%)
Round=3, perf=[399, 422, 412, 389, 402, 393, 385, 412, 389, 404], mean perf=4007/20400 (0.1964%)
Round=4, perf=[453, 485, 498, 453, 473, 465, 463, 462, 453, 481], mean perf=4686/20400 (0.2297%)
Round=5, perf=[416, 436, 433, 394, 409, 393, 409, 436, 406, 406], mean perf=4138/20400 (0.2028%)
Round=6, perf=[551, 611, 599, 565, 577, 538, 550, 590, 553, 594], mean perf=5728/20400 (0.2808%)
Round=7, perf=[545, 592, 573, 545, 537, 542, 528, 561, 542, 560], mean perf=5525/20400 (0.2708%)
Round=8, perf=[557, 581, 560, 530, 561, 544, 512, 538, 510, 554], mean perf=5447/20400 (0.2670%)
Round=9, perf=[685, 714, 672, 677, 681, 672, 661, 715, 682, 705], mean perf=6864/20400 (0.3365%)
Round=10, perf=[723, 757, 747, 707, 731, 712, 725, 747, 714, 758], mean perf=7321/20400 (0.3589%)
Round=11, perf=[833, 873, 862, 821, 852, 788, 809, 853, 817, 890], mean perf=8398/20400 (0.4117%)
Round=12, perf=[956, 987, 971, 944, 955, 944, 956, 1001, 956, 960], mean perf=9630/20400 (0.4721%)
Round=13, perf=[1024, 1020, 1011, 984, 1009, 957, 964, 1010, 983, 1011], mean perf=9973/20400 (0.4889%)
Round=14, perf=[988, 1018, 1020, 997, 1017, 959, 1003, 1022, 990, 1032], mean perf=10046/20400 (0.4925%)
Mean performance of StrongForAll, eps=[[0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 ...
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]
 [0.1 0.1 0.1 ... 0.1 0.1 0.1]], delta=0.0001, Perf=0.4845
 We run FedAvg with rPDP (BoundedMixGauss-0) ...
sample_rate: 0.021965964339383415 / 0.7027952230325502, expected_batch_size: 397 / 3960
Round=0, perf=[276, 307, 284, 276, 296, 274, 281, 308, 282, 285], mean perf=2869/20400 (0.1406%)
Round=1, perf=[408, 433, 419, 396, 427, 397, 417, 444, 418, 420], mean perf=4179/20400 (0.2049%)
Round=2, perf=[683, 686, 706, 663, 709, 681, 699, 721, 698, 714], mean perf=6960/20400 (0.3412%)
Round=3, perf=[1177, 1180, 1154, 1160, 1170, 1139, 1186, 1150, 1171, 1179], mean perf=11666/20400 (0.5719%)
Round=4, perf=[1316, 1347, 1324, 1318, 1339, 1286, 1319, 1329, 1325, 1320], mean perf=13223/20400 (0.6482%)
Round=5, perf=[1456, 1470, 1470, 1439, 1489, 1438, 1464, 1459, 1474, 1453], mean perf=14612/20400 (0.7163%)
Round=6, perf=[1535, 1545, 1525, 1510, 1537, 1505, 1523, 1512, 1535, 1535], mean perf=15262/20400 (0.7481%)
Round=7, perf=[1610, 1613, 1585, 1581, 1611, 1563, 1592, 1579, 1603, 1592], mean perf=15929/20400 (0.7808%)
Round=8, perf=[1668, 1667, 1656, 1629, 1666, 1624, 1662, 1634, 1654, 1652], mean perf=16512/20400 (0.8094%)
Round=9, perf=[1685, 1699, 1687, 1659, 1709, 1653, 1697, 1675, 1673, 1686], mean perf=16823/20400 (0.8247%)
Round=10, perf=[1699, 1728, 1719, 1703, 1726, 1686, 1730, 1696, 1707, 1719], mean perf=17113/20400 (0.8389%)
Round=11, perf=[1721, 1741, 1736, 1732, 1753, 1709, 1745, 1716, 1727, 1745], mean perf=17325/20400 (0.8493%)
Round=12, perf=[1763, 1773, 1756, 1754, 1777, 1728, 1764, 1745, 1758, 1772], mean perf=17590/20400 (0.8623%)
Round=13, perf=[1777, 1785, 1776, 1771, 1786, 1750, 1770, 1760, 1781, 1779], mean perf=17735/20400 (0.8694%)
Round=14, perf=[1791, 1785, 1796, 1783, 1796, 1764, 1789, 1777, 1791, 1791], mean perf=17863/20400 (0.8756%)
Mean performance of BoundedMixGauss, min_eps=0.1000, max_eps=6.4534, delta=0.0001, Perf=0.8691, seed=45
 We run FedAvg with rPDP (Dropout) ...
sample_rate: 0.0 / 0.10915648009538997, expected_batch_size: 127 / 3960
Round=0, perf=[211, 224, 226, 224, 228, 205, 220, 237, 224, 222], mean perf=2221/20400 (0.1089%)
Round=1, perf=[257, 304, 253, 280, 305, 276, 297, 292, 288, 248], mean perf=2800/20400 (0.1373%)
Round=2, perf=[670, 684, 682, 654, 675, 627, 678, 644, 670, 655], mean perf=6639/20400 (0.3254%)
Round=3, perf=[744, 744, 762, 719, 733, 709, 757, 699, 737, 737], mean perf=7341/20400 (0.3599%)
Round=4, perf=[744, 717, 731, 701, 762, 681, 722, 743, 693, 727], mean perf=7221/20400 (0.3540%)
Round=5, perf=[938, 925, 913, 913, 974, 904, 927, 911, 938, 950], mean perf=9293/20400 (0.4555%)
Round=6, perf=[1058, 1057, 1065, 1042, 1069, 996, 1052, 1050, 1071, 1057], mean perf=10517/20400 (0.5155%)
Round=7, perf=[1064, 1084, 1072, 1081, 1094, 1041, 1079, 1067, 1073, 1083], mean perf=10738/20400 (0.5264%)
Round=8, perf=[1212, 1214, 1218, 1197, 1246, 1172, 1212, 1208, 1203, 1201], mean perf=12083/20400 (0.5923%)
Round=9, perf=[1305, 1316, 1325, 1287, 1321, 1275, 1311, 1306, 1323, 1267], mean perf=13036/20400 (0.6390%)
Round=10, perf=[1388, 1388, 1370, 1368, 1409, 1344, 1372, 1391, 1378, 1350], mean perf=13758/20400 (0.6744%)
Round=11, perf=[1398, 1418, 1386, 1424, 1430, 1389, 1388, 1421, 1418, 1396], mean perf=14068/20400 (0.6896%)
Round=12, perf=[1446, 1483, 1460, 1473, 1515, 1447, 1472, 1482, 1474, 1462], mean perf=14714/20400 (0.7213%)
Round=13, perf=[1504, 1506, 1477, 1508, 1531, 1487, 1496, 1515, 1508, 1497], mean perf=15029/20400 (0.7367%)
Round=14, perf=[1565, 1582, 1554, 1579, 1607, 1561, 1562, 1597, 1570, 1578], mean perf=15755/20400 (0.7723%)
Mean performance of Dropout, eps=1.0, delta=0.0001, Perf=0.7434
